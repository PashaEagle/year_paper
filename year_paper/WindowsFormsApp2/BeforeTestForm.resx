<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAyADEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+sTWvFOm6LuSWTzJ16xoR8vpuJ4H06+1UfGnib+w7IW9u+Lu
        ZSQw6xp03fUngfie1ed2mmm6IutRy5b5lhJOBnu3ck//AK81FSooK7N8Ph515csTfuvijOXP2a3iCZwP
        lL/rkfypkPxPvVYebbQsnfMbL+u4/wAqiZYXtzbtEhhIx5e0bfyrltW0s2Dedbs3kMcYzyh9PpXDVx0o
        e8o3R7NHJoVPdc7P00PWtE8b6Xq7pCxNtcOcKshyrn0DevscH2rpa+cI5ATg4UnjPY+xFepeAPFUl6x0
        bUJGa4jUtbyOcs6jqpPdl9e49wa6cPiYV43geZjcBVwc+Wps9n3O9oooroOI8Z1+5OqeNr1pOY4JigU+
        kfygf99bj+NXDG6rGZJYIzIAwV5AGCnox9BxWRqG628YazC4IYXUp59GbeP0atO4LNovm3SIkqBFtpA4
        3SrnlSAedo5z2xivOxLvUafRH0WWpKgmursyw9pPHeR2m6Fp5CAFSQHGQCMntwc1AbR72G5hZokVf3bm
        VwgDE4Aye+RU1zNbnUtSlknIQW6orR4ZizxonAyM4BbvxinzXlin264mHnW832aZk37G5J39M8ghjj3r
        Jxjr8zrVWpZWWunTq2v0ZyUOgXsv2kM9rC9qSJ0nnVGjwQMkHtkgZ96js759NvrDUkb57a4UsQeoBAP5
        qxFak8zG88UvPcRSSTQ5V0ICyZljI2j/AHccVhNC8tlBboMyXMwRB65KqP1z+VY4KKhXSh1vf5DzWbq4
        OUqltHG3zSv+bPo3cPUUVF9nX1NFe4fInm3xL0SS0v4vEdumYWVYrzA+6Rwrn252n8K5HeNokT7jcZ9/
        Q+9e9SxRzxPFKiyRupVkYZDA9QRXmOt/Dm+0+aS58OMs1s3WxlbBUeik8MPZunrXNiMOqy7M9HL8wlhJ
        O6vF7o5Lzfeqt1dZUxoev3jU92ktqTHqOk39o/fCMoP5gj8jUdvHFO4Sz0q/vJD0Xa7D8lUfzry54HEP
        3Vb7z6KOdYNLmbfpb+l+JVt7YzkkkJCnMkhHC/4n0Heuw8B6K2t+Ik1Noium6acR56PKB8o99udxPqRU
        ukeANZ1l431gjTbBeRbxkeYw9ABwmfXk16lY2NrpllFZ2UCQ28S7UjQcAV6GDwccOr7tng5lmcsZJJK0
        Vsv1ZYooortPKCiiigAooooAKKKKACiiigD/2Q==
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>